[Unit]
Description=Docker Application Container Engine
Documentation=https://docs.docker.com (https://github.com/docker/docker/tree/master/contrib/init/systemd)
After=network-online.target docker.socket
Wants=network-online.target
Requires=docker.socket

[Service]
Type=notify
# the default is not to use systemd for cgroups because the delegate issues still
# exists and systemd currently does not support the cgroup feature set required
# for containers run by docker
{% if docker_http_proxy != "" %}
Environment="HTTP_PROXY={{docker_http_proxy}}"
{% endif %}
{% if docker_https_proxy != "" %}
Environment="HTTPS_PROXY={{docker_https_proxy}}"
{% endif %}
{% if docker_no_proxy != "" %}
Environment="NO_PROXY={{docker_no_proxy}}"
{% endif %}
Environment="PATH={{ansible_env.PATH}}:{{docker_bin_dir}}"
ExecStart={{docker_bin_dir}}/dockerd \
          --host=unix:///var/run/docker.sock \
          --log-level={{docker_log_level}} \
          --storage-driver={{docker_storage_driver}} \
          --iptables={{docker_iptables}} \
          --ip-masq={{docker_ip_masq}} \
          --bip={{docker_bip}} \
          --mtu={{docker_mtu}} \
          --graph={{docker_graph_dir}}
ExecReload=/bin/kill -s HUP $MAINPID
LimitNOFILE=1048576
# Having non-zero Limit*s causes performance problems due to accounting overhead
# in the kernel. We recommend using cgroups to do container-local accounting.
LimitNPROC=infinity
LimitCORE=infinity
# Uncomment TasksMax if your systemd version supports it.
# Only systemd 226 and above support this version.
TasksMax=infinity
TimeoutStartSec=0
# set delegate yes so that systemd does not reset the cgroups of docker containers
Delegate=yes
# kill only the docker process, not all processes in the cgroup
KillMode=process
# restart the docker process if it exits prematurely
Restart=on-failure
StartLimitBurst=3
StartLimitInterval=60s

[Install]
WantedBy=multi-user.target
